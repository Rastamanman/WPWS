// Generated by view binder compiler. Do not edit!
package com.example.wpws.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wpws.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AlarmsSettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView firstTitle;

  @NonNull
  public final Spinner notificationChoice;

  @NonNull
  public final Button saveButton;

  @NonNull
  public final TextView secondTitle;

  private AlarmsSettingsBinding(@NonNull ConstraintLayout rootView, @NonNull TextView firstTitle,
      @NonNull Spinner notificationChoice, @NonNull Button saveButton,
      @NonNull TextView secondTitle) {
    this.rootView = rootView;
    this.firstTitle = firstTitle;
    this.notificationChoice = notificationChoice;
    this.saveButton = saveButton;
    this.secondTitle = secondTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AlarmsSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AlarmsSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.alarms_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AlarmsSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.first_title;
      TextView firstTitle = ViewBindings.findChildViewById(rootView, id);
      if (firstTitle == null) {
        break missingId;
      }

      id = R.id.notification_choice;
      Spinner notificationChoice = ViewBindings.findChildViewById(rootView, id);
      if (notificationChoice == null) {
        break missingId;
      }

      id = R.id.save_button;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.second_title;
      TextView secondTitle = ViewBindings.findChildViewById(rootView, id);
      if (secondTitle == null) {
        break missingId;
      }

      return new AlarmsSettingsBinding((ConstraintLayout) rootView, firstTitle, notificationChoice,
          saveButton, secondTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
