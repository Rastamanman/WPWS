// Generated by view binder compiler. Do not edit!
package com.example.wpws.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wpws.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddDayItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText cloudsEdit;

  @NonNull
  public final Spinner cloudsSpinner;

  @NonNull
  public final TextView cloudsSymbol;

  @NonNull
  public final TextView cloudsText;

  @NonNull
  public final TextView dayConditionSeparator;

  @NonNull
  public final TextView dayText;

  @NonNull
  public final EditText maxTempEdit;

  @NonNull
  public final Spinner maxTempSpinner;

  @NonNull
  public final TextView maxTempSymbol;

  @NonNull
  public final TextView maxTempText;

  @NonNull
  public final EditText minTempEdit;

  @NonNull
  public final Spinner minTempSpinner;

  @NonNull
  public final TextView minTempSymbol;

  @NonNull
  public final TextView minTempText;

  @NonNull
  public final EditText precipitationEdit;

  @NonNull
  public final Spinner precipitationSpinner;

  @NonNull
  public final TextView precipitationSymbol;

  @NonNull
  public final TextView precipitationText;

  @NonNull
  public final EditText pressureEdit;

  @NonNull
  public final Spinner pressureSpinner;

  @NonNull
  public final TextView pressureSymbol;

  @NonNull
  public final TextView pressureText;

  @NonNull
  public final EditText rainEdit;

  @NonNull
  public final Spinner rainSpinner;

  @NonNull
  public final TextView rainSymbol;

  @NonNull
  public final TextView rainText;

  @NonNull
  public final RelativeLayout relativeLayout;

  @NonNull
  public final EditText rhEdit;

  @NonNull
  public final Spinner rhSpinner;

  @NonNull
  public final TextView rhSymbol;

  @NonNull
  public final TextView rhText;

  @NonNull
  public final EditText snowEdit;

  @NonNull
  public final Spinner snowSpinner;

  @NonNull
  public final TextView snowSymbol;

  @NonNull
  public final TextView snowText;

  @NonNull
  public final EditText tempEdit;

  @NonNull
  public final Spinner tempSpinner;

  @NonNull
  public final TextView tempSymbol;

  @NonNull
  public final TextView tempText;

  @NonNull
  public final EditText windSpeedEdit;

  @NonNull
  public final Spinner windSpeedSpinner;

  @NonNull
  public final TextView windSpeedSymbol;

  @NonNull
  public final TextView windSpeedText;

  private AddDayItemBinding(@NonNull RelativeLayout rootView, @NonNull EditText cloudsEdit,
      @NonNull Spinner cloudsSpinner, @NonNull TextView cloudsSymbol, @NonNull TextView cloudsText,
      @NonNull TextView dayConditionSeparator, @NonNull TextView dayText,
      @NonNull EditText maxTempEdit, @NonNull Spinner maxTempSpinner,
      @NonNull TextView maxTempSymbol, @NonNull TextView maxTempText, @NonNull EditText minTempEdit,
      @NonNull Spinner minTempSpinner, @NonNull TextView minTempSymbol,
      @NonNull TextView minTempText, @NonNull EditText precipitationEdit,
      @NonNull Spinner precipitationSpinner, @NonNull TextView precipitationSymbol,
      @NonNull TextView precipitationText, @NonNull EditText pressureEdit,
      @NonNull Spinner pressureSpinner, @NonNull TextView pressureSymbol,
      @NonNull TextView pressureText, @NonNull EditText rainEdit, @NonNull Spinner rainSpinner,
      @NonNull TextView rainSymbol, @NonNull TextView rainText,
      @NonNull RelativeLayout relativeLayout, @NonNull EditText rhEdit, @NonNull Spinner rhSpinner,
      @NonNull TextView rhSymbol, @NonNull TextView rhText, @NonNull EditText snowEdit,
      @NonNull Spinner snowSpinner, @NonNull TextView snowSymbol, @NonNull TextView snowText,
      @NonNull EditText tempEdit, @NonNull Spinner tempSpinner, @NonNull TextView tempSymbol,
      @NonNull TextView tempText, @NonNull EditText windSpeedEdit,
      @NonNull Spinner windSpeedSpinner, @NonNull TextView windSpeedSymbol,
      @NonNull TextView windSpeedText) {
    this.rootView = rootView;
    this.cloudsEdit = cloudsEdit;
    this.cloudsSpinner = cloudsSpinner;
    this.cloudsSymbol = cloudsSymbol;
    this.cloudsText = cloudsText;
    this.dayConditionSeparator = dayConditionSeparator;
    this.dayText = dayText;
    this.maxTempEdit = maxTempEdit;
    this.maxTempSpinner = maxTempSpinner;
    this.maxTempSymbol = maxTempSymbol;
    this.maxTempText = maxTempText;
    this.minTempEdit = minTempEdit;
    this.minTempSpinner = minTempSpinner;
    this.minTempSymbol = minTempSymbol;
    this.minTempText = minTempText;
    this.precipitationEdit = precipitationEdit;
    this.precipitationSpinner = precipitationSpinner;
    this.precipitationSymbol = precipitationSymbol;
    this.precipitationText = precipitationText;
    this.pressureEdit = pressureEdit;
    this.pressureSpinner = pressureSpinner;
    this.pressureSymbol = pressureSymbol;
    this.pressureText = pressureText;
    this.rainEdit = rainEdit;
    this.rainSpinner = rainSpinner;
    this.rainSymbol = rainSymbol;
    this.rainText = rainText;
    this.relativeLayout = relativeLayout;
    this.rhEdit = rhEdit;
    this.rhSpinner = rhSpinner;
    this.rhSymbol = rhSymbol;
    this.rhText = rhText;
    this.snowEdit = snowEdit;
    this.snowSpinner = snowSpinner;
    this.snowSymbol = snowSymbol;
    this.snowText = snowText;
    this.tempEdit = tempEdit;
    this.tempSpinner = tempSpinner;
    this.tempSymbol = tempSymbol;
    this.tempText = tempText;
    this.windSpeedEdit = windSpeedEdit;
    this.windSpeedSpinner = windSpeedSpinner;
    this.windSpeedSymbol = windSpeedSymbol;
    this.windSpeedText = windSpeedText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddDayItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddDayItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_day_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddDayItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clouds_edit;
      EditText cloudsEdit = ViewBindings.findChildViewById(rootView, id);
      if (cloudsEdit == null) {
        break missingId;
      }

      id = R.id.clouds_spinner;
      Spinner cloudsSpinner = ViewBindings.findChildViewById(rootView, id);
      if (cloudsSpinner == null) {
        break missingId;
      }

      id = R.id.clouds_symbol;
      TextView cloudsSymbol = ViewBindings.findChildViewById(rootView, id);
      if (cloudsSymbol == null) {
        break missingId;
      }

      id = R.id.clouds_text;
      TextView cloudsText = ViewBindings.findChildViewById(rootView, id);
      if (cloudsText == null) {
        break missingId;
      }

      id = R.id.day_condition_separator;
      TextView dayConditionSeparator = ViewBindings.findChildViewById(rootView, id);
      if (dayConditionSeparator == null) {
        break missingId;
      }

      id = R.id.day_text;
      TextView dayText = ViewBindings.findChildViewById(rootView, id);
      if (dayText == null) {
        break missingId;
      }

      id = R.id.max_temp_edit;
      EditText maxTempEdit = ViewBindings.findChildViewById(rootView, id);
      if (maxTempEdit == null) {
        break missingId;
      }

      id = R.id.max_temp_spinner;
      Spinner maxTempSpinner = ViewBindings.findChildViewById(rootView, id);
      if (maxTempSpinner == null) {
        break missingId;
      }

      id = R.id.max_temp_symbol;
      TextView maxTempSymbol = ViewBindings.findChildViewById(rootView, id);
      if (maxTempSymbol == null) {
        break missingId;
      }

      id = R.id.max_temp_text;
      TextView maxTempText = ViewBindings.findChildViewById(rootView, id);
      if (maxTempText == null) {
        break missingId;
      }

      id = R.id.min_temp_edit;
      EditText minTempEdit = ViewBindings.findChildViewById(rootView, id);
      if (minTempEdit == null) {
        break missingId;
      }

      id = R.id.min_temp_spinner;
      Spinner minTempSpinner = ViewBindings.findChildViewById(rootView, id);
      if (minTempSpinner == null) {
        break missingId;
      }

      id = R.id.min_temp_symbol;
      TextView minTempSymbol = ViewBindings.findChildViewById(rootView, id);
      if (minTempSymbol == null) {
        break missingId;
      }

      id = R.id.min_temp_text;
      TextView minTempText = ViewBindings.findChildViewById(rootView, id);
      if (minTempText == null) {
        break missingId;
      }

      id = R.id.precipitation_edit;
      EditText precipitationEdit = ViewBindings.findChildViewById(rootView, id);
      if (precipitationEdit == null) {
        break missingId;
      }

      id = R.id.precipitation_spinner;
      Spinner precipitationSpinner = ViewBindings.findChildViewById(rootView, id);
      if (precipitationSpinner == null) {
        break missingId;
      }

      id = R.id.precipitation_symbol;
      TextView precipitationSymbol = ViewBindings.findChildViewById(rootView, id);
      if (precipitationSymbol == null) {
        break missingId;
      }

      id = R.id.precipitation_text;
      TextView precipitationText = ViewBindings.findChildViewById(rootView, id);
      if (precipitationText == null) {
        break missingId;
      }

      id = R.id.pressure_edit;
      EditText pressureEdit = ViewBindings.findChildViewById(rootView, id);
      if (pressureEdit == null) {
        break missingId;
      }

      id = R.id.pressure_spinner;
      Spinner pressureSpinner = ViewBindings.findChildViewById(rootView, id);
      if (pressureSpinner == null) {
        break missingId;
      }

      id = R.id.pressure_symbol;
      TextView pressureSymbol = ViewBindings.findChildViewById(rootView, id);
      if (pressureSymbol == null) {
        break missingId;
      }

      id = R.id.pressure_text;
      TextView pressureText = ViewBindings.findChildViewById(rootView, id);
      if (pressureText == null) {
        break missingId;
      }

      id = R.id.rain_edit;
      EditText rainEdit = ViewBindings.findChildViewById(rootView, id);
      if (rainEdit == null) {
        break missingId;
      }

      id = R.id.rain_spinner;
      Spinner rainSpinner = ViewBindings.findChildViewById(rootView, id);
      if (rainSpinner == null) {
        break missingId;
      }

      id = R.id.rain_symbol;
      TextView rainSymbol = ViewBindings.findChildViewById(rootView, id);
      if (rainSymbol == null) {
        break missingId;
      }

      id = R.id.rain_text;
      TextView rainText = ViewBindings.findChildViewById(rootView, id);
      if (rainText == null) {
        break missingId;
      }

      id = R.id.relative_layout;
      RelativeLayout relativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout == null) {
        break missingId;
      }

      id = R.id.rh_edit;
      EditText rhEdit = ViewBindings.findChildViewById(rootView, id);
      if (rhEdit == null) {
        break missingId;
      }

      id = R.id.rh_spinner;
      Spinner rhSpinner = ViewBindings.findChildViewById(rootView, id);
      if (rhSpinner == null) {
        break missingId;
      }

      id = R.id.rh_symbol;
      TextView rhSymbol = ViewBindings.findChildViewById(rootView, id);
      if (rhSymbol == null) {
        break missingId;
      }

      id = R.id.rh_text;
      TextView rhText = ViewBindings.findChildViewById(rootView, id);
      if (rhText == null) {
        break missingId;
      }

      id = R.id.snow_edit;
      EditText snowEdit = ViewBindings.findChildViewById(rootView, id);
      if (snowEdit == null) {
        break missingId;
      }

      id = R.id.snow_spinner;
      Spinner snowSpinner = ViewBindings.findChildViewById(rootView, id);
      if (snowSpinner == null) {
        break missingId;
      }

      id = R.id.snow_symbol;
      TextView snowSymbol = ViewBindings.findChildViewById(rootView, id);
      if (snowSymbol == null) {
        break missingId;
      }

      id = R.id.snow_text;
      TextView snowText = ViewBindings.findChildViewById(rootView, id);
      if (snowText == null) {
        break missingId;
      }

      id = R.id.temp_edit;
      EditText tempEdit = ViewBindings.findChildViewById(rootView, id);
      if (tempEdit == null) {
        break missingId;
      }

      id = R.id.temp_spinner;
      Spinner tempSpinner = ViewBindings.findChildViewById(rootView, id);
      if (tempSpinner == null) {
        break missingId;
      }

      id = R.id.temp_symbol;
      TextView tempSymbol = ViewBindings.findChildViewById(rootView, id);
      if (tempSymbol == null) {
        break missingId;
      }

      id = R.id.temp_text;
      TextView tempText = ViewBindings.findChildViewById(rootView, id);
      if (tempText == null) {
        break missingId;
      }

      id = R.id.wind_speed_edit;
      EditText windSpeedEdit = ViewBindings.findChildViewById(rootView, id);
      if (windSpeedEdit == null) {
        break missingId;
      }

      id = R.id.wind_speed_spinner;
      Spinner windSpeedSpinner = ViewBindings.findChildViewById(rootView, id);
      if (windSpeedSpinner == null) {
        break missingId;
      }

      id = R.id.wind_speed_symbol;
      TextView windSpeedSymbol = ViewBindings.findChildViewById(rootView, id);
      if (windSpeedSymbol == null) {
        break missingId;
      }

      id = R.id.wind_speed_text;
      TextView windSpeedText = ViewBindings.findChildViewById(rootView, id);
      if (windSpeedText == null) {
        break missingId;
      }

      return new AddDayItemBinding((RelativeLayout) rootView, cloudsEdit, cloudsSpinner,
          cloudsSymbol, cloudsText, dayConditionSeparator, dayText, maxTempEdit, maxTempSpinner,
          maxTempSymbol, maxTempText, minTempEdit, minTempSpinner, minTempSymbol, minTempText,
          precipitationEdit, precipitationSpinner, precipitationSymbol, precipitationText,
          pressureEdit, pressureSpinner, pressureSymbol, pressureText, rainEdit, rainSpinner,
          rainSymbol, rainText, relativeLayout, rhEdit, rhSpinner, rhSymbol, rhText, snowEdit,
          snowSpinner, snowSymbol, snowText, tempEdit, tempSpinner, tempSymbol, tempText,
          windSpeedEdit, windSpeedSpinner, windSpeedSymbol, windSpeedText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
